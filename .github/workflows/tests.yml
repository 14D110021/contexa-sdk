name: Contexa SDK Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-cov
        pip install -e .[all]
        pip install -r tests/requirements.txt
    
    - name: Run tests
      run: |
        pytest tests/ --cov=contexa_sdk --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        flake8 contexa_sdk tests --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check formatting with black
      run: |
        black --check contexa_sdk tests
    
    - name: Check imports with isort
      run: |
        isort --check-only --profile black contexa_sdk tests

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[all]
        pip install sphinx sphinx_rtd_theme pydocstyle
    
    - name: Check docstring compliance
      run: |
        pydocstyle contexa_sdk --convention=google --add-ignore=D100,D104 || true
    
    - name: Build documentation
      run: |
        # Create docs directory if it doesn't exist
        mkdir -p docs
        cd docs
        
        # Initialize Sphinx if not already done
        if [ ! -f "conf.py" ]; then
          sphinx-quickstart -q -p "Contexa SDK" -a "Contexa Team" -v "0.1.0" --ext-autodoc --ext-viewcode --makefile --no-batchfile .
        fi
        
        # Build HTML documentation
        make html || echo "Documentation build completed with warnings"
    
    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html

  integration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[all]
        pip install pytest pytest-asyncio
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short
    
    - name: Test examples
      run: |
        # Test that examples can be imported without errors
        python -c "
        import sys
        import os
        sys.path.insert(0, 'examples')
        
        example_files = [
            'search_agent.py',
            'agent_handoff.py',
            'multi_framework_integration.py'
        ]
        
        for example in example_files:
            if os.path.exists(f'examples/{example}'):
                try:
                    exec(open(f'examples/{example}').read())
                    print(f'✓ {example} executed successfully')
                except Exception as e:
                    print(f'✗ {example} failed: {e}')
            else:
                print(f'? {example} not found')
        " 